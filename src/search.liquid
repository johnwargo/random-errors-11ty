---
title: Search
layout: default
---

<header>
  <h2>{{ title }}</h2>
</header>

<style>
  [v-cloak] {
    display: none
  }
</style>

{% raw %}
  <div id="app" v-cloak>
    <form data-members-form="subscribe" class="subscribe-form">
      <div v-cloak class="form-group">
        <input
          v-model="search"
          class="subscribe-email"
          type="search">
        <button @click.prevent="doSearch" class="button">
          <span v-if="searching">Searching...</span>
          <span v-else>Search</span>
        </button>
      </div>
    </form>

    <div v-if="noResults">
      <p>
        Sorry, I found no results for that search query, please try again.
      </p>
    </div>
    <div v-if="results && !noResults">
      <p v-if="numResults > 1">
        I found {{ numResults }} results for that search query.
      </p>
      <p v-else>
        I only found one result for that search query.
      </p>
      <p v-for="(result,idx) in results" :key="idx">
        {{ idx+1 }})
        <a :href="result.url" @click="track(result.url, result.objectID, idx+1)">{{ result.title }}</a><br/>
        Published: {{ result.date }}<br/>
        Excerpt:
        <span v-html="result._snippetResult.content.value"></span>
      </p>
    </div>
  </div>

  <p>
    <img src="/images/algolia.webp" title="Search by Algolia">
    <p>Search implementation shamelessly
      <s>stolen</s>
      borrowed from
      <a href="https://github.com/cfjedimaster/raymondcamden2020/blob/master/search.liquid" target="_blank">Raymond Camden</a>
    </p>
  </p>
{% endraw %}

<script src="https://cdn.jsdelivr.net/npm/algoliasearch@4/dist/algoliasearch-lite.umd.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script>
  var ALGOLIA_INSIGHTS_SRC = "https://cdn.jsdelivr.net/npm/search-insights@1.6.3";

  !function(e, a, t, n, s, i, c) {
    e.AlgoliaAnalyticsObject = s,
    e[s] = e[s] || function() {
      (e[s].queue = e[s].queue || []).push(arguments)
    },
    i = a.createElement(t),
    c = a.getElementsByTagName(t)[0],
    i.async = 1,
    i.src = n,
    c.parentNode.insertBefore(i, c)
  }(window, document, "script", ALGOLIA_INSIGHTS_SRC, "aa");

  aa('init', {
    appId: 'VUH8IMQX7J',
    apiKey: '02d898539a9012429e481c110ad4964f'
  });
</script>

<script>
  const app = new Vue({
    el: '#app',
    data: {
      search: '',
      searching: false,
      algolia_client: null,
      algolia_index: null,
      results: null,
      numResults: null,
      noResults: false,
      queryID: null
    },
    created() {
      this.client = algoliasearch('VUH8IMQX7J', '02d898539a9012429e481c110ad4964f');
      this.index = this.client.initIndex('random-errors-main');

// support url param search
      let qp = new URLSearchParams(window.location.search);
      let search = qp.get('search');
      if (search) {
        this.search = search;
        this.doSearch();
      }
    },
    methods: {
      async doSearch() {
        this.results = null;
        if (this.search === '') 
          return;
        
        this.searching = true;
        this.noResults = false;
        console.log('search for ' + this.search);
        let resultsRaw = await this.index.search(this.search, {
          attributesToRetrieve: [
            'title', 'url', 'date'
          ],
          attributesToSnippet: ['content'],
          hitsPerPage: 50,
          clickAnalytics: true
        });

        let options = {
          year: 'numeric',
          month: 'long',
          day: 'numeric'
        };
        let formatter = new Intl.DateTimeFormat('en-US', options);
        resultsRaw.hits.forEach(h => {
          h.date = formatter.format(new Date(h.date));
        });
        this.results = resultsRaw.hits;
        this.numResults = resultsRaw.nbHits;
        this.searching = false;
        this.noResults = this.results.length === 0;
        this.queryID = resultsRaw.queryID;
      },
      track(url, id, pos) {
        aa('clickedObjectIDsAfterSearch', {
          eventName: 'click_on_search_page',
          index: 'random-errors-main',
          queryID: this.queryID,
          objectIDs: [id],
          positions: [pos]
        });
      }
    }
  })
</script>